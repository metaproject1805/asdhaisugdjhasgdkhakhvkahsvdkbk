# Generated by Django 5.1.2 on 2024-10-25 06:46

import django.contrib.auth.models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('investment', '0001_initial'),
        ('packages', '0001_initial'),
        ('tasks', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('Error', 'Error'), ('Success', 'Success'), ('Info', 'Info'), ('Warning', 'Warning')], max_length=15)),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=50, null=True, unique=True, verbose_name='Username')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='Email')),
                ('ref_code', models.CharField(blank=True, max_length=50)),
                ('security_phase', models.TextField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('partnership_level', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=False)),
                ('weekly_salary', models.IntegerField(default=0)),
                ('phase_active', models.BooleanField(default=False)),
                ('security_phase_1', models.CharField(blank=True, max_length=15)),
                ('security_phase_2', models.CharField(blank=True, max_length=15)),
                ('security_phase_3', models.CharField(blank=True, max_length=15)),
                ('security_phase_4', models.CharField(blank=True, max_length=15)),
                ('security_phase_5', models.CharField(blank=True, max_length=15)),
                ('security_phase_6', models.CharField(blank=True, max_length=15)),
                ('video_watched_count', models.IntegerField(default=0)),
                ('ref_bonus', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('investment_accumulation', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('active_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='packages.packages')),
                ('active_ref', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('investment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='investment.investment')),
                ('pending_ref', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('ref_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_ref_by', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('video_watched', models.ManyToManyField(blank=True, to='tasks.task')),
                ('notification', models.ManyToManyField(blank=True, to='profiles.usernotification')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
